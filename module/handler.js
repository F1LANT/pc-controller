import { Markup } from 'telegraf';
import screenshot from 'screenshot-desktop'
import {publicIpv4} from 'public-ip'
import CMD from 'node-cmd'
import { NodeAudioVolumeMixer } from "node-audio-volume-mixer";

export const _loadMenu = async (ctx) => {
	let id = ctx.message.chat.id
	if (id === 189721519) {
		ctx.reply('–ü—Ä–∏–≤–µ—Ç, –ø–∞–Ω–µ–ª—å PC-CONTROLLER –∑–∞–≥—Ä—É–∂–µ–Ω–∞!', Markup
		.keyboard([
			['üí£ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –¥–æ—Å—Ç—É–ø', 'üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç'], // Row1 with 2 buttons
			['üîá –í—ã–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫', 'üîà –í–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫'],
			['üõë –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å PC','üìü –ü–æ–∫–∞–∑–∞—Ç—å IP','‚ôªÔ∏è –í—ã–∫–ª—é—á–∏—Ç—å PC'], // Row2 with 2 buttons
		])
		.placeholder()
		.resize()
	)
	}
}
export const _handlerCommands = async(ctx, messageCommand) => {
    switch (messageCommand) {
        case 'üí£ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –¥–æ—Å—Ç—É–ø':
            CMD.run('tsdiscon')
            ctx.reply(`–£—Å–ø–µ—à–Ω–æ –≤—ã—à–ª–∏ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!`)
            break;
    //////////////////////////////////////////////////////
        case 'üîá –í—ã–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫':
            NodeAudioVolumeMixer.setMasterVolumeLevelScalar(0);
            ctx.reply(`–ó–≤—É–∫ –≤—ã–∫–ª—é—á–µ–Ω!`)
            break;
    //////////////////////////////////////////////////////       
        case 'üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç':
            console.log(1)
            screenshot.listDisplays().then((displays) => {
                // displays: [{ id, name }, { id, name }]
                screenshot({ screen: displays[displays.length - 1].id })
                .then((img) => {
                  let imgbase = Buffer.from(img, 'base64');
                  ctx.replyWithPhoto({ source: imgbase }, { caption: "–≠–∫—Ä–∞–Ω 2" });
                });
              })
              screenshot.listDisplays().then((displays) => {
                // displays: [{ id, name }, { id, name }]
                screenshot({ screen: displays[displays.length - 2].id })
                  .then((img) => {
                    let imgbase = Buffer.from(img, 'base64');
                    ctx.replyWithPhoto({ source: imgbase }, { caption: "–≠–∫—Ä–∞–Ω 1" });
                  });
              })

            break;
    //////////////////////////////////////////////////////
        case 'üîà –í–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫':
            NodeAudioVolumeMixer.setMasterVolumeLevelScalar(1);
            ctx.reply(`–ó–≤—É–∫ –≤–∫–ª—é—á–µ–Ω!`)
            break;
    //////////////////////////////////////////////////////
        case 'üõë –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å PC':
            CMD.run(`shutdown /r 00"`, function(err, data, stderr) {
            });
            ctx.reply(`–ö–æ–º–ø—å—é—Ç–µ—Ä –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è!`)
            break;
    //////////////////////////////////////////////////////
        case 'üìü –ü–æ–∫–∞–∑–∞—Ç—å IP':
            let networkInterfaces = await publicIpv4();
            return ctx.reply(`IP –∞–¥—Ä–µ—Å—Å –ü–ö - ${networkInterfaces}`)
            break;
    //////////////////////////////////////////////////////
        case '‚ôªÔ∏è –í—ã–∫–ª—é—á–∏—Ç—å PC':
            CMD.run(`shutdown -s -t 00"`, function(err, data, stderr) {
            });
            ctx.reply(`–ö–æ–º–ø—å—é—Ç–µ—Ä –≤—ã–∫–ª—é—á–µ–Ω!`)
            break;
    //////////////////////////////////////////////////////
        default:
            break;
    }
}

export default { _handlerCommands, _loadMenu }